<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.rockhoppertech</groupId>
	<artifactId>mvc-javaconfig</artifactId>
	<name>mvc-javaconfig</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<description>An example of configuring Spring MVC 3 without XML</description>
	<url>http://rockhoppertech.com/blog/spring-mvc-configuration-without-xml</url>
	<inceptionYear>2012</inceptionYear>

	<prerequisites>
		<maven>3.0.3</maven>
	</prerequisites>

	<properties>
		<java.version>1.6</java.version>

		<servlet.api.version>3.0.1</servlet.api.version>
		<jsp.api.version>2.1</jsp.api.version>
		<jstl.version>1.2</jstl.version>
		<validation.version>1.0.0.GA</validation.version>

		<!-- <org.springframework.version>3.1.2.RELEASE</org.springframework.version> -->
		<org.springframework.version>3.2.0.M2</org.springframework.version>
		<org.aspectj.version>1.7.1.RELEASE</org.aspectj.version>
		<cglib.version>2.2.2</cglib.version>

		<com.h2database.version>1.3.168</com.h2database.version>
		<mysql-connector-java.version>5.1.21</mysql-connector-java.version>

		<junit.version>4.10</junit.version>
		<mockito.version>1.9.5-rc1</mockito.version>
		<hamcrest-all.version>1.3</hamcrest-all.version>
		<spring-test-mvc.version>1.0.0.M1</spring-test-mvc.version>

		<logback.version>1.0.7</logback.version>
		<slf4j.version>1.7.0</slf4j.version>

		<google-guava.version>13.0.1</google-guava.version>
		<joda-time.version>2.1</joda-time.version>

		<jackson-mapper-asl.version>1.9.9</jackson-mapper-asl.version>

		<tiles.version>2.2.2</tiles.version>

		<spring.data.jpa.version>1.2.0.RC1</spring.data.jpa.version>

		<hibernate.version>3.6.10.Final</hibernate.version>
		<!-- <hibernate.version>4.1.7.Final</hibernate.version> -->
		<hibernate.jmx.version>3.5.6-Final</hibernate.jmx.version>
		<hibernate.jpa.version>1.0.1.Final</hibernate.jpa.version>
		<hibernate.validator.version>4.3.0.Final</hibernate.validator.version>

		<maven.jetty.plugin>8.1.5.v20120716</maven.jetty.plugin>
		<maven.tomcat.plugin>2.0-beta-1</maven.tomcat.plugin>
		<!--<maven.tomcat.plugin>2.0-SNAPSHOT</maven.tomcat.plugin> -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

	</properties>

	<developers>
		<developer>
			<id>gd</id>
			<name>Gene De Lisa</name>
			<email>gene@rockhoppertech.com</email>
			<url>http://www.rockhoppertech.com/blog</url>
			<organization>Rockhopper Technologies</organization>
			<organizationUrl>http://www.rockhoppertech.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-5</timezone>
		</developer>
	</developers>

	<organization>
		<name>Rockhopper Technologies</name>
		<url>http://www.rockhoppertech.com/</url>
	</organization>

	<scm>
		<connection>scm:git:git@github.com:genedelisa/spring-mvc3-javaconfig.git</connection>
		<url>scm:git:git@github.com:genedelisa/spring-mvc3-javaconfig.git</url>
		<developerConnection>scm:git:git@github.com:genedelisa/spring-mvc3-javaconfig.git</developerConnection>
	</scm>

	<issueManagement>
		<system>Bugzilla</system>
		<url>http://rocco/~gene/bugzilla/</url>
	</issueManagement>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- using @Configuration -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
		</dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj.version}</version>
		</dependency>

		<!-- Logging -->

		<!-- logback imports slf4j -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- org.springframework.context.support.AbstractApplicationContext needs 
			commons logging. slf4j fixes that. <dependency> <groupId>commons-logging</groupId> 
			<artifactId>commons-logging</artifactId> <version>1.1</version> </dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<!-- 2.5 name -->
			<!-- <artifactId>servlet-api</artifactId> -->
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp.api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson-mapper-asl.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation.version}</version>
		</dependency>


		<!-- Test -->

		<!-- junit imports hamcrest but not all the matchers -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test-mvc</artifactId>
			<version>${spring-test-mvc.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- DB -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${com.h2database.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.jpa.version}</version>
		</dependency>


		<!-- ORM via Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm-attrs</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jmx</artifactId>
			<version>${hibernate.jmx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>${hibernate.jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- misc -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${google-guava.version}</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>

	</dependencies>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-maven-release</id>
			<name>Spring Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-maven-milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring.maven.snapshot</id>
			<name>Spring Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
		</pluginRepository>

		<!-- tomcat plugin -->
		<pluginRepository>
			<id>apache.snapshots</id>
			<name>Apache Snapshots</name>
			<url>http://repository.apache.org/content/groups/snapshots-group/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>

	</pluginRepositories>

	<repositories>
		<repository>
			<id>spring.maven.release</id>
			<name>Spring Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>spring.maven.milestone</id>
			<name>Spring Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>spring.maven.snapshot</id>
			<name>Spring Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
		</repository>
		<!-- JBoss repo only needed for Spring Security Dependency of com.sun.xml.wsit:xws-security:jar:1.3.1 
			<repository> <id>jboss.repository.releases.public</id> <name>JBoss Repo Public</name> 
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss</url> 
			</repository> -->

		<repository>
			<id>jboss.repository.releases.public</id>
			<name>JBoss Repo releases</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>

		<repository>
			<id>glassfish</id>
			<name>glassfish</name>
			<url>http://download.java.net/maven/glassfish/org/glassfish/</url>
		</repository>

	</repositories>



	<build>
		<plugins>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<!-- generate line numbers for the debugger -->
					 <debug>true</debug>
					 <debuglevel>none</debuglevel>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>com.rockhoppertech.example.Main</mainClass>
				</configuration>
			</plugin>

			<!-- http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/ -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${maven.tomcat.plugin}</version>

				<configuration>
					<port>9090</port>

					<systemProperties>
						<com.sun.management.jmxremote>true</com.sun.management.jmxremote>
						<com.sun.management.jmxremote.port>8050</com.sun.management.jmxremote.port>
						<com.sun.management.jmxremote.ssl>false</com.sun.management.jmxremote.ssl>
						<com.sun.management.jmxremote.authenticate>false</com.sun.management.jmxremote.authenticate>
						<java.util.logging.manager>org.apache.juli.ClassLoaderLogManager</java.util.logging.manager>
						<logback.ContextSelector>JNDI</logback.ContextSelector>
					</systemProperties>

				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>jul-to-slf4j</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
						<version>${logback.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-access</artifactId>
						<version>${logback.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.plugin}</version>
				<configuration>
					<webAppConfig>
						<contextPath>/${project.name}</contextPath>
					</webAppConfig>

					<!-- "stopPort" - Port number to receive a stop command and shutdown 
						- use "mvn jetty:stop" "stopKey" - String value that must be sent to the 
						stopPort to validate the stop command -->
					<stopPort>9966</stopPort>
					<stopKey>shutterdown</stopKey>
					<requestLog implementation="ch.qos.logback.access.jetty.RequestLogImpl">
						<fileName>./src/main/resources/logback-access.xml</fileName>
					</requestLog>
					<systemProperties>
						<systemProperty>
							<name>logback.configurationFile</name>
							<value>./src/main/resources/logback.xml</value>
						</systemProperty>
						<systemProperty>
							<name>com.sun.management.jmxremote</name>
							<value>true</value>
						</systemProperty>
						<systemProperty>
							<name>com.sun.management.jmxremote.port</name>
							<value>8050</value>
						</systemProperty>
						<systemProperty>
							<name>com.sun.management.jmxremote.ssl</name>
							<value>false</value>
						</systemProperty>
						<systemProperty>
							<name>com.sun.management.jmxremote.authenticate</name>
							<value>false</value>
						</systemProperty>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>jul-to-slf4j</artifactId>
						<version>${slf4j.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
						<version>${logback.version}</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-access</artifactId>
						<version>${logback.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

			<!-- http://mojo.codehaus.org/versions-maven-plugin/usage.html -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>1.3.1</version>
				<dependencies>
					<dependency>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
						<version>${junit.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<!-- run "mvn hibernate3:hbm2ddl" to generate a schema -->
				<!-- http://mojo.codehaus.org/maven-hibernate3/hibernate3-maven-plugin/componentproperties.html -->
				<!-- http://docs.jboss.org/tools/3.2.1.GA/en/hibernatetools/html_single/index.html#d0e4625 -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>3.0</version>

				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<implementation>jpaconfiguration</implementation>
						</component>
					</components>
					<hibernatetool>
						<classpath>
							<path location="${project.build.directory}/classes" />
							<path location="${project.basedir}/src/main/resources/META-INF/" />
						</classpath>
						<jpaconfiguration persistenceunit="Default" />
						<hbm2ddl create="true" export="false" drop="true"
							outputfilename="schema.ddl" format="true" console="true" />
					</hibernatetool>
				</configuration>
			</plugin>

			<!-- http://maven.apache.org/plugins/maven-site-plugin/maven-3.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.12</version>
							<configuration>
							</configuration>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.8.1</version>
							<configuration>
								<aggregate>true</aggregate>
								<breakiterator>true</breakiterator>
								<links>
									<link>http://download.oracle.com/javase/6/docs/api//</link>
									<link>http://download.oracle.com/javaee/6/api/</link>
									<link>http://static.springsource.org/spring/docs/current/javadoc-api/</link>
									<link>http://static.springsource.org/spring-data/data-jpa/docs/current/api/</link>
									<link>http://slf4j.org/api/</link>
									<link>http://commons.apache.org/dbcp/api-1.2.2/</link>
									<link>http://jakarta.apache.org/commons/logging/apidocs/</link>
									<link>http://commons.apache.org/lang/api-release/</link>
									<link>http://commons.apache.org/io/api-release/</link>
									<link>http://junit.sourceforge.net/javadoc/</link>
									<link>http://help.eclipse.org/help33/topic/org.eclipse.jdt.doc.isv/reference/api/</link>
								</links>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.7</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.4</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.3</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.1</version>
							<configuration>
								<aggregate>true</aggregate>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>2.7.1</version>
							<configuration>
								<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
								<minimumTokens>100</minimumTokens>
								<targetJdk>${java.version}</targetJdk>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>2.5.2</version>
							<!-- <version>3.1.1</version> -->
						</plugin>

						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>taglist-maven-plugin</artifactId>
							<version>2.4</version>
							<configuration>
								<tagListOptions>
									<tagClasses>
										<tagClass>
											<displayName>Todo Work</displayName>
											<tags>
												<tag>
													<matchString>todo</matchString>
													<matchType>ignoreCase</matchType>
												</tag>
												<tag>
													<matchString>FIXME</matchString>
													<matchType>exact</matchType>
												</tag>
											</tags>
										</tagClass>
									</tagClasses>
								</tagListOptions>
							</configuration>
						</plugin>

					</reportPlugins>
					<locales>en</locales>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
